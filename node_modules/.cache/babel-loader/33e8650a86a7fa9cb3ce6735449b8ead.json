{"ast":null,"code":"var _jsxFileName = \"/Users/alakesmi/Desktop/ToDoList Project/todolist/src/Components/Row.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Creating the row component, this would be the actual to-do itself.\n// Destructuring the task/isCompleted\nexport const Row = _ref => {\n  let {\n    todo: {\n      task,\n      isCompleted\n    }\n  } = _ref;\n\n  /*#__PURE__*/\n  _jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: task\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Delete a task\",\n        onClick: () => null,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: isCompleted,\n        onChange: () => null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this);\n};\n_c = Row;\n\nvar _c;\n\n$RefreshReg$(_c, \"Row\");","map":{"version":3,"sources":["/Users/alakesmi/Desktop/ToDoList Project/todolist/src/Components/Row.tsx"],"names":["Row","todo","task","isCompleted"],"mappings":";;AAYA;AACA;AACA,OAAO,MAAMA,GAAG,GAAG,QAAgD;AAAA,MAA/C;AAAEC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR;AAAR,GAA+C;;AACjE;AAAA;AAAA,4BACE;AAAA,gBAAID;AAAJ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAQ,sBAAW,eAAnB;AAAmC,QAAA,OAAO,EAAE,MAAM,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,OAAO,EAAEC,WAAhC;AAA6C,QAAA,QAAQ,EAAE,MAAM;AAA7D;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AASD,CAVM;KAAMH,G","sourcesContent":["// We must create the different types of props.\n\ntype Todo = {\n  id: string;\n  task: string;\n  isCompleted: boolean;\n};\n\ntype TodoProps = {\n  todo: Todo;\n};\n\n// Creating the row component, this would be the actual to-do itself.\n// Destructuring the task/isCompleted\nexport const Row = ({ todo: { task, isCompleted } }: TodoProps) => {\n  <div>\n    <p>{task}</p>\n    <div>\n      <button aria-label=\"Delete a task\" onClick={() => null}>\n        X\n      </button>\n      <input type=\"checkbox\" checked={isCompleted} onChange={() => null} />\n    </div>\n  </div>;\n};\n"]},"metadata":{},"sourceType":"module"}